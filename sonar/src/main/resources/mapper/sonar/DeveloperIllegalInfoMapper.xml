<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yubing.web.mapper.sonar.DeveloperIllegalInfoMapper">
  <resultMap id="BaseResultMap" type="com.yubing.web.model.sonar.DeveloperIllegalInfo">
    <result column="DEVELOPER" jdbcType="VARCHAR" property="developer" />
    <result column="BLOCKER" jdbcType="DECIMAL" property="blocker" />
    <result column="CRITICAL" jdbcType="DECIMAL" property="critical" />
    <result column="MAJOR" jdbcType="DECIMAL" property="major" />
    <result column="MINOR" jdbcType="DECIMAL" property="minor" />
    <result column="INFO" jdbcType="DECIMAL" property="info" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="BATCH_NUMBER" jdbcType="DECIMAL" property="batchNumber" />
    <result column="STATE" jdbcType="DECIMAL" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    DEVELOPER, BLOCKER, CRITICAL, MAJOR, MINOR, INFO, CREATE_DATE, BATCH_NUMBER, STATE
  </sql>
  <select id="selectByExample" parameterType="com.yubing.web.model.sonar.DeveloperIllegalInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from DEVELOPER_ILLEGAL_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yubing.web.model.sonar.DeveloperIllegalInfoExample">
    delete from DEVELOPER_ILLEGAL_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yubing.web.model.sonar.DeveloperIllegalInfo">
    insert into DEVELOPER_ILLEGAL_INFO (DEVELOPER, BLOCKER, CRITICAL, 
      MAJOR, MINOR, INFO, 
      CREATE_DATE, BATCH_NUMBER, STATE
      )
    values (#{developer,jdbcType=VARCHAR}, #{blocker,jdbcType=DECIMAL}, #{critical,jdbcType=DECIMAL}, 
      #{major,jdbcType=DECIMAL}, #{minor,jdbcType=DECIMAL}, #{info,jdbcType=DECIMAL}, 
      #{createDate,jdbcType=TIMESTAMP}, #{batchNumber,jdbcType=DECIMAL}, #{state,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yubing.web.model.sonar.DeveloperIllegalInfo">
    insert into DEVELOPER_ILLEGAL_INFO
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="developer != null">
        DEVELOPER,
      </if>
      <if test="blocker != null">
        BLOCKER,
      </if>
      <if test="critical != null">
        CRITICAL,
      </if>
      <if test="major != null">
        MAJOR,
      </if>
      <if test="minor != null">
        MINOR,
      </if>
      <if test="info != null">
        INFO,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="batchNumber != null">
        BATCH_NUMBER,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="developer != null">
        #{developer,jdbcType=VARCHAR},
      </if>
      <if test="blocker != null">
        #{blocker,jdbcType=DECIMAL},
      </if>
      <if test="critical != null">
        #{critical,jdbcType=DECIMAL},
      </if>
      <if test="major != null">
        #{major,jdbcType=DECIMAL},
      </if>
      <if test="minor != null">
        #{minor,jdbcType=DECIMAL},
      </if>
      <if test="info != null">
        #{info,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="batchNumber != null">
        #{batchNumber,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yubing.web.model.sonar.DeveloperIllegalInfoExample" resultType="java.lang.Long">
    select count(*) from DEVELOPER_ILLEGAL_INFO
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DEVELOPER_ILLEGAL_INFO
    <set>
      <if test="record.developer != null">
        DEVELOPER = #{record.developer,jdbcType=VARCHAR},
      </if>
      <if test="record.blocker != null">
        BLOCKER = #{record.blocker,jdbcType=DECIMAL},
      </if>
      <if test="record.critical != null">
        CRITICAL = #{record.critical,jdbcType=DECIMAL},
      </if>
      <if test="record.major != null">
        MAJOR = #{record.major,jdbcType=DECIMAL},
      </if>
      <if test="record.minor != null">
        MINOR = #{record.minor,jdbcType=DECIMAL},
      </if>
      <if test="record.info != null">
        INFO = #{record.info,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.batchNumber != null">
        BATCH_NUMBER = #{record.batchNumber,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        STATE = #{record.state,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DEVELOPER_ILLEGAL_INFO
    set DEVELOPER = #{record.developer,jdbcType=VARCHAR},
      BLOCKER = #{record.blocker,jdbcType=DECIMAL},
      CRITICAL = #{record.critical,jdbcType=DECIMAL},
      MAJOR = #{record.major,jdbcType=DECIMAL},
      MINOR = #{record.minor,jdbcType=DECIMAL},
      INFO = #{record.info,jdbcType=DECIMAL},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      BATCH_NUMBER = #{record.batchNumber,jdbcType=DECIMAL},
      STATE = #{record.state,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>